extends layout-1
block titleName
  title 阿里云-OSS价格计算器
block css
  link(rel="stylesheet",href="styles/oss.css")
  link(rel="stylesheet",href="http://static-img3.cdn.aliyuncs.com/??css/common/alipw_skin.css,css/www-summerwind/buy.css?v=1367065989")
block header
  include inc/header-index
block content
  .content-header
    ul.title-list-1
      li.li-1
        img(src="http://static-img2.cdn.aliyuncs.com/images/www-summerwind/icon_calculator.gif")
      li.li-2 OSS价格计算器
      li.li-3 用多用少算算就知道！
  .content-body
    .method-1.box-1
      .box-topbar
      .box-body
        fieldset.form-1
          legend
            span.span-1 请输入您的信息
            span.span-2 
              ins
          .form-item
            label.form-item-lable.font-16gray 存储信息：
            br
          .form-item
            label.form-item-lable  预存入数据量：
            input(id="J_storage").input-1
            select(id="J_unit_1")
              option(value="GB") GB
              option(value="TB") TB
              option(value="PB") PB
            span.form-item-tip （预计首次导入的数据容量）
          .form-item
            label.form-item-lable  每日增长数据量：
            input(id="J_storage_add").input-1
            select(id="J_unit_2")
              option(value="GB") GB
              option(value="TB") TB
              option(value="PB") PB
          .form-item
            label.form-item-lable.font-16gray 流量信息：
            br
          .form-item
            label.form-item-lable  每日外网流出流量：
            input(id="J_flow_out").input-1
            select(id="J_unit_3")
              option(value="GB") GB
              option(value="TB") TB
              option(value="PB") PB
            span.form-item-tip
             a(href="#") 什么叫做外网流出流量？
          .form-item
            label.form-item-lable.font-16gray 流量信息：
            br
          .form-item
            label.form-item-lable  每日产生请求次数：
            input(id="J_request").input-1
            span.form-item-tip
              b.font-red 万
              次，
              a(href="#") 请求次数怎么计算
          .form-item.form-item-buttton
            input.btn.btn-large.btn-orange(type="button",value="开始测算",id="startCount_btn_1") 
          h2.title-box-1 预估费用
            a(href="#") 了解OSS如何计算...
          table.table-1.oss_cost
            thead
              tr
                th(width="25%") 费用项目
                th(width="25%") 日费用预算
                th(width="25%") 月费用预算
                th(width="25%") 年费用预算
            tbody
              tr.storage-cost
                td 数据存储费用
                td.font-red 
                td.font-red 
                td.font-red 
              tr.bg-blue.flow-out-cost
                td 流出流量费用
                td.font-red 
                td.font-red 
                td.font-red 
              tr.request-num-cost
                td 请求次数费用
                td.font-red 
                td.font-red 
                td.font-red
              tr.bg-blue.total-cost
                td 总计费用
                td.font-red 
                td.font-red 
                td.font-red 
          .oss-text-list
            dl
              dt 省钱小窍门：
              dd 已购买阿里云服务器用户可采用内网调用方式，内网调用产生流量免费；
                a(href="#") 如何调用内网？
              dd 数据存储量与流量大于50Tb用户，可联系
                a(href="#") bd@aliyun-inc.com
                获得更多优惠；
              dd 经常登录阿里云社区，数据存储计算版块，参加更多优惠活动，
                a(href="#") 点击进入...
          
      script
        Alipw.importClass('Alipw.ComboBox');
        Alipw.Config.set('Alipw.ComboBox',{
          height:25,
          cls:'aliyun-standard-combo',
          overCls:'aliyun-standard-combo-over',
          downCls:'aliyun-standard-combo-down',
          expandedCls:'aliyun-standard-combo-expanded',
          listCls:'aliyun-standard-combo-list',
          listAboveCls:'aliyun-standard-combo-list-above',
          listUnderneathCls:'aliyun-standard-combo-list-underneath'
        });
        //计算器
        function calculate(i, val){
              var sPrice = [0.02, 0.018, 0.016, 0.015],
                  rfPrice = 0,
                  cfPrice = [0.75, 0.7, 0.65, 0.6],
                  reqPplPrice = 0.01,
                  reqGetPrice = 0.01;
                  
              switch(i){
                //存储空间
                case 0:
                  //500G
                      if( val <= 500 ){
                          return  (val * sPrice[0]);
                      }
                      //2T
                      else if( val <= 2048 ){
                          return  (
                            500 * sPrice[0] +
                            (val - 500) * sPrice[1]
                          );
                      }
                      //10T
                      else if( val <= 10240 ){
                          return  (
                              500 * sPrice[0] +
                              (2048 - 500 ) * sPrice[1] +
                              (val - 2048) * sPrice[2]
                          );
                      }
                      //10T <
                      else{
                          return  (
                          500 * sPrice[0] +
                              (2048 - 500 ) * sPrice[1] +
                              (10240 - 2048) * sPrice[2] +
                              (val - 10240) * sPrice[3]
                          );
                      }
                      break;
                  case 1: //上行流量
                      return  rfPrice;
                      break;
                  case 2: //下行流量
                    //500G
                      if( val <= 500 ){
                          return  (val * cfPrice[0]);
                      }
                      //2T
                      else if( val <= 2048 ){
                          return  (
                            500 * cfPrice[0] +
                            (val - 500) * cfPrice[1]
                          );
                      }
                      //10T
                      else if( val <= 10240 ){
                          return  (
                          500 * cfPrice[0] +
                              (2048 - 500) * cfPrice[1] +
                              (val - 2048) * cfPrice[2]
                          );
                      }
                      //10T <
                      else{
                          return  (
                          500 * cfPrice[0] +
                              (2048 - 500) * cfPrice[1] +
                              (10240 - 2048) * cfPrice[2] +
                              (val - 10240) * cfPrice[3]
                          );
                      }
                      break;
                  case 3: //PUT/POST/LIST请求
                      return ( reqPplPrice * val );
                      break;
                  case 4: //GET及其它请求
                      return ( reqGetPrice * val );;
                      break;
              }
        }
        Alipw.onReady(function(){
          var combo = new Alipw.ComboBox({
                  applyTo:"#J_unit_1",
                  width:50
               });
          var combo = new Alipw.ComboBox({
                  applyTo:"#J_unit_2",
                  width:50
               });
          var combo = new Alipw.ComboBox({
                  applyTo:"#J_unit_3",
                  width:50
               });
          //计算价格
          $("#startCount_btn_1").click(function(){
            var turnToGB=function(val,tv){
              switch(tv){
                  case 'GB':  break;
                  case 'TB':  val *= 1024; break;
                  default:  val *= 1024*1024;
                } 
                return val           
            } 
            //按增量计算存储费用
            var addUpFunc=function(baseStorage,addNum,dayNum){
            var totalStorageCost=0;
              for(var i=0;i<dayNum;i++){
                  baseStorage+=addNum*i;
                  totalStorageCost+=calculate(0,baseStorage);
              } 
              return totalStorageCost;           
            } 
            var storage=$.trim($("#J_storage").val())==""?0:turnToGB(parseInt($("#J_storage").val()),$("#J_unit_1").val());
            var storageAdd=$.trim($("#J_storage_add").val())==""?0:turnToGB(parseInt($("#J_storage_add").val()),$("#J_unit_2").val());
            var flowOut=$.trim($("#J_flow_out").val())==""?0:turnToGB(parseInt($("#J_flow_out").val()),$("#J_unit_3").val());
            var request=$.trim($("#J_request").val())==""?0:parseInt($("#J_request").val());

           
            var targetTd=null;
            var total_1=0,total_2=0,total_3=0;
            var viewCostFunc=function(selector,thisCost){
                  targetTd=$(selector);
                  targetTd.eq(1).html((thisCost).toFixed(2)+"元/日");
                  targetTd.eq(2).html((thisCost*31).toFixed(2)+"元/月");
                  targetTd.eq(3).html((thisCost*365).toFixed(2)+"元/年"); 
                  total_1+=thisCost;
                  total_2+=thisCost*31;
                  total_3+=thisCost*365;                               
            }
            //将表格费用清空
            $(".storage-cost td.font-red").html('');
            $(".flow-out-cost td.font-red").html('');
            $(".request-num-cost td.font-red").html('');
            $(".total-cost.font-red").html('');
                $(".oss_cost").fadeOut(300,function(){
                if(storage!=0){

                    targetTd=$(".storage-cost td");
                    if(storageAdd!=0){
                      total_1+=addUpFunc(storage,storageAdd,1);
                      total_2+=addUpFunc(storage,storageAdd,31);
                      total_3+=addUpFunc(storage,storageAdd,365);
                      targetTd.eq(1).html(addUpFunc(storage,storageAdd,1).toFixed(2)+"元/日");
                      targetTd.eq(2).html(addUpFunc(storage,storageAdd,31).toFixed(2)+"元/月");
                      targetTd.eq(3).html(addUpFunc(storage,storageAdd,365).toFixed(2)+"元/年");   
                    }else{
                     viewCostFunc(".storage-cost td",calculate(0,storage));           
                    }
                  }
                if(flowOut!=0){
                    viewCostFunc(".flow-out-cost td",calculate(2,flowOut));      
                }  
                if(request!=0){
                    viewCostFunc(".request-num-cost td",calculate(3,request));      
                } 
                targetTd=$(".total-cost td"); 
                if(total_1!=0){
                  targetTd.eq(1).html(total_1.toFixed(2)+"元/日");
                }
                if(total_2!=0){
                  targetTd.eq(2).html(total_2.toFixed(2)+"元/日");
                }
                if(total_3!=0){
                  targetTd.eq(3).html(total_3.toFixed(2)+"元/日");
                }
                $(".oss_cost").fadeIn();
              });
        
            //
            });

          })        

